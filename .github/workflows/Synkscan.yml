name: 'vpc deploy'
on:
  workflow_call:
    inputs:
      workingdirectory:
        description: "working directory of terraform"
        required: true
        type: string
        
jobs:
  Scan_Code:
    runs-on: ubuntu-latest
    environment: test
    
    steps:
    
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Download Snyk
      run: |
         brew tap snyk/tap
         brew install snyk
           
    - name: Auth Synk 
      run: snyk auth 00d132d0-d20a-4c06-8495-cbfee1bd7530
      
    - name: Auth Synk 
      run:  snyk code test .
         
    - name: Snyk Monitor
      run: snyk monitor 
      
      
  Terraform:
    runs-on: ubuntu-latest
    needs: Scan_Code
    environment: deploy
    
    steps:
    
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      working-directory: ${{ inputs.workingdirectory }}

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan
      working-directory: ${{ inputs.workingdirectory }}

      # Executes Terraform Apply
    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ${{ inputs.workingdirectory }}

      # Executes Terraform destroy
    #- name: Terraform Destroy
    #  run: terraform destroy -auto-approve 
    #  working-directory: ${{ inputs.workingdirectory }}
